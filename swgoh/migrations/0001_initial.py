# Generated by Django 2.2.1 on 2019-06-05 11:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_id', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=128)),
                ('alignment', models.CharField(choices=[('ls', 'Light Side'), ('ds', 'Dark Side')], max_length=32)),
                ('role', models.CharField(choices=[('attacker', 'Attacker'), ('capital-ship', 'Capital Ship'), ('healer', 'Healer'), ('leader', 'Leader'), ('support', 'Support'), ('tank', 'Tank')], max_length=32)),
                ('power', models.IntegerField()),
                ('combat_type', models.IntegerField(choices=[(1, 'Character'), (2, 'Ship')])),
                ('description', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
                ('image', models.CharField(max_length=255)),
                ('activate_shard_count', models.IntegerField()),
                ('ship_slot', models.CharField(choices=[('', None), (0, '0'), (1, '1'), (2, '2')], max_length=8, null=True)),
                ('capital_ship', models.BooleanField(default=False)),
                ('ship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='swgoh.BaseUnit')),
            ],
        ),
        migrations.CreateModel(
            name='Gear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_id', models.CharField(max_length=128, unique=True)),
                ('name', models.CharField(max_length=128)),
                ('tier', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)])),
                ('required_level', models.IntegerField()),
                ('mark', models.CharField(choices=[('Mk I', 'Mk I'), ('Mk II', 'Mk II'), ('Mk III', 'Mk III'), ('Mk IV', 'Mk IV'), ('Mk V', 'Mk V'), ('Mk VI', 'Mk VI'), ('Mk VII', 'Mk VII'), ('Mk VIII', 'Mk VIII'), ('Mk IX', 'Mk IX'), ('Mk X', 'Mk X'), ('Mk XI', 'Mk XI'), ('Mk XII', 'Mk XII')], max_length=16)),
                ('cost', models.IntegerField()),
                ('url', models.CharField(max_length=255)),
                ('image', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ally_code', models.CharField(max_length=128, unique=True)),
                ('discord_id', models.CharField(max_length=128, unique=True)),
                ('discord_name', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('discord_nick', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('discord_display_name', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('game_nick', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('language', models.CharField(choices=[('chs_cn', 'Chinese (Simplified)'), ('cht_cn', 'Chinese (Traditional)'), ('eng_us', 'English'), ('fre_fr', 'French'), ('ger_de', 'German'), ('ind_id', 'Indy'), ('ita_it', 'Italian'), ('jpn_jp', 'Japanese'), ('kor_kr', 'Korean'), ('por_br', 'Brasilian'), ('rus_ru', 'Russian'), ('spa_xm', 'Spanish (Latino)'), ('tha_th', 'Thai'), ('tur_tr', 'Turkish')], default='eng_us', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Shard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('char', 'Character Arena'), ('ship', 'Ship Arena')], max_length=8)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swgoh.Player')),
            ],
            options={
                'unique_together': {('player', 'type')},
            },
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('string_id', models.CharField(max_length=64)),
                ('context', models.CharField(max_length=16)),
                ('translation', models.CharField(max_length=64)),
                ('language', models.CharField(max_length=6)),
            ],
            options={
                'unique_together': {('string_id', 'context', 'language')},
            },
        ),
        migrations.CreateModel(
            name='ShardMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ally_code', models.CharField(max_length=12)),
                ('shard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swgoh.Shard')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swgoh.BaseUnit')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swgoh.Player')),
            ],
        ),
        migrations.CreateModel(
            name='ModRecommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('cg', 'Capital Games'), ('cr', 'Crouching Rancor'), ('sw', 'Swgoh.gg')], max_length=32)),
                ('modset1', models.CharField(choices=[(1, 'Health'), (2, 'Offense'), (3, 'Defense'), (4, 'Speed'), (5, 'Critical Chance'), (6, 'Critical Damage'), (7, 'Potency'), (8, 'Tenacity')], max_length=32)),
                ('modset2', models.CharField(choices=[(1, 'Health'), (2, 'Offense'), (3, 'Defense'), (4, 'Speed'), (5, 'Critical Chance'), (6, 'Critical Damage'), (7, 'Potency'), (8, 'Tenacity')], max_length=32)),
                ('modset3', models.CharField(choices=[(1, 'Health'), (2, 'Offense'), (3, 'Defense'), (4, 'Speed'), (5, 'Critical Chance'), (6, 'Critical Damage'), (7, 'Potency'), (8, 'Tenacity')], max_length=32)),
                ('square', models.CharField(choices=[('offense%', 'Offense %')], max_length=32)),
                ('arrow', models.CharField(choices=[('accuracy%', 'Accuracy %'), ('critical-avoidance%', 'Critical Avoidance %'), ('defense%', 'Defense %'), ('health%', 'Health %'), ('offense%', 'Offense %'), ('protection%', 'Protection %'), ('speed', 'Speed')], max_length=32)),
                ('diamond', models.CharField(choices=[('defense%', 'Defense %')], max_length=32)),
                ('triangle', models.CharField(choices=[('critical-chance%', 'Critical Chance %'), ('critical-damage%', 'Critical Damage %'), ('defense%', 'Defense %'), ('health%', 'Health %'), ('offense%', 'Offense %'), ('protection%', 'Protection %')], max_length=32)),
                ('circle', models.CharField(choices=[('health%', 'Health %'), ('protection%', 'Protection %')], max_length=32)),
                ('cross', models.CharField(choices=[('defense%', 'Defense %'), ('health%', 'Health %'), ('offense%', 'Offense %'), ('potency%', 'Potency %'), ('protection%', 'Protection %'), ('tenacity%', 'Tenacity %')], max_length=32)),
                ('info', models.CharField(blank=True, default='', max_length=255)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swgoh.BaseUnit')),
            ],
        ),
        migrations.CreateModel(
            name='Mod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot', models.CharField(choices=[(1, 'Square'), (2, 'Arrow'), (3, 'Diamond'), (4, 'Triangle'), (5, 'Circle'), (6, 'Cross')], max_length=16)),
                ('modset', models.CharField(choices=[(1, 'Health'), (2, 'Offense'), (3, 'Defense'), (4, 'Speed'), (5, 'Critical Chance'), (6, 'Critical Damage'), (7, 'Potency'), (8, 'Tenacity')], max_length=16)),
                ('primary_stat', models.CharField(choices=[('ac', 'Accuracy'), ('ca', 'Critical Avoidance'), ('cc', 'Critical Chance'), ('cd', 'Critical Damage'), ('de', 'Defense'), ('he', 'Health'), ('of', 'Offense'), ('po', 'Potency'), ('pr', 'Protection'), ('sp', 'Speed'), ('te', 'Tenacity')], max_length=16)),
                ('secondary_stat_1', models.CharField(choices=[('cc', 'Critical Chance'), ('sp', 'speed')], max_length=16)),
                ('secondary_stat_2', models.CharField(choices=[('cc', 'Critical Chance'), ('sp', 'speed')], max_length=16)),
                ('secondary_stat_3', models.CharField(choices=[('cc', 'Critical Chance'), ('sp', 'speed')], max_length=16)),
                ('secondary_stat_4', models.CharField(choices=[('cc', 'Critical Chance'), ('sp', 'speed')], max_length=16)),
                ('secondary_stat_value_1', models.CharField(max_length=8)),
                ('secondary_stat_value_2', models.CharField(max_length=8)),
                ('secondary_stat_value_3', models.CharField(max_length=8)),
                ('secondary_stat_value_4', models.CharField(max_length=8)),
                ('secondary_stat_rolls_1', models.IntegerField(default=0)),
                ('secondary_stat_rolls_2', models.IntegerField(default=0)),
                ('secondary_stat_rolls_3', models.IntegerField(default=0)),
                ('secondary_stat_rolls_4', models.IntegerField(default=0)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swgoh.PlayerCharacter')),
            ],
        ),
        migrations.CreateModel(
            name='BaseUnitSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_id', models.CharField(max_length=30)),
                ('is_zeta', models.BooleanField(default=False)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swgoh.BaseUnit')),
            ],
        ),
        migrations.CreateModel(
            name='BaseUnitGear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.IntegerField()),
                ('slot', models.IntegerField()),
                ('gear', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swgoh.Gear')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swgoh.BaseUnit')),
            ],
        ),
        migrations.CreateModel(
            name='BaseUnitFaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faction', models.CharField(choices=[('profession_bountyhunter', 'Bounty Hunters'), ('profession_clonetrooper', 'Clone Trooper'), ('profession_jedi', 'Jedi'), ('profession_scoundrel', 'Scoundrel'), ('profession_sith', 'Sith'), ('profession_smuggler', 'Smuggler'), ('affiliation_empire', 'Empire'), ('affiliation_firstorder', 'First Order'), ('affiliation_imperialtrooper', 'Imperial Trooper'), ('affiliation_nightsisters', 'Nightsister'), ('affiliation_oldrepublic', 'Old Republic'), ('affiliation_phoenix', 'Phoenix'), ('affiliation_rebels', 'Rebel'), ('affiliation_republic', 'Galactic Republic'), ('affiliation_resistance', 'Resistance'), ('affiliation_rogue_one', 'Rogue One'), ('affiliation_separatist', 'Separatist'), ('affiliation_sithempire', 'Sith Empire'), ('species_droid', 'Droid'), ('species_ewok', 'Ewok'), ('species_geonosian', 'Geonosian'), ('species_human', 'Human'), ('species_jawa', 'Jawa'), ('species_tusken', 'Tusken'), ('species_wookiee', 'Wookie')], max_length=32)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swgoh.BaseUnit')),
            ],
        ),
        migrations.CreateModel(
            name='BaseUnitAbilityClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ability', models.CharField(choices=[('Ability Block', 'Ability Block'), ('Advantage', 'Advantage'), ('Anti-Droid', 'Anti-Droid'), ('AoE', 'AoE'), ('Assist', 'Assist'), ('Bonus Attack', 'Bonus Attack'), ('Buff Immunity', 'Buff Immunity'), ('Counter', 'Counter'), ('Daze', 'Daze'), ('Defense Down', 'Defense Down'), ('Defense Up', 'Defense Up'), ('Dispel', 'Dispel'), ('Dispel - All Enemies', 'Dispel - All Enemies'), ('DoT', 'DoT'), ('Evasion Down', 'Evasion Down'), ('Evasion Up', 'Evasion Up'), ('Expose', 'Expose'), ('Foresight', 'Foresight'), ('Gain Turn Meter', 'Gain Turn Meter'), ('Heal', 'Heal'), ('Healing Immunity', 'Healing Immunity'), ('Leader: Assist', 'Leader: Assist'), ('Leader: +Critical', 'Leader: +Critical'), ('Leader: +Defense', 'Leader: +Defense'), ('Leader: +Evasion', 'Leader: +Evasion'), ('Leader: Foresight', 'Leader: Foresight'), ('Leader: Healing', 'Leader: Healing'), ('Leader: +Max Health', 'Leader: +Max Health'), ('Leader: +Speed', 'Leader: +Speed'), ('Leader: +Tenacity', 'Leader: +Tenacity'), ('Offense Down', 'Offense Down'), ('Offense Up', 'Offense Up'), ('Reduce Cooldowns', 'Reduce Cooldowns'), ('Remove Turn Meter', 'Remove Turn Meter'), ('Reset Cooldown', 'Reset Cooldown'), ('Revive', 'Revive'), ('Speed Down', 'Speed Down'), ('Stealth', 'Stealth'), ('Stun', 'Stun'), ('Target Lock', 'Target Lock'), ('Taunt', 'Taunt'), ('Tenacity Down', 'Tenacity Down'), ('Tenacity Up', 'Tenacity Up'), ('Thermal Detonator', 'Thermal Detonator')], max_length=32)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swgoh.BaseUnit')),
            ],
        ),
    ]
